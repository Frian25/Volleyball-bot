import os
import json
import logging
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telegram.ext import Updater, CommandHandler

# –£–≤—ñ–º–∫–Ω—É—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –û—Ç—Ä–∏–º—É—î–º–æ JSON –∑ –∫–ª—é—á–∞–º–∏ –∑ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
# ‚ö†Ô∏è –£ Render –¥–æ–¥–∞–π –∑–º—ñ–Ω–Ω—É CREDS_JSON (–¥–∏–≤–∏—Å—å –¥–∞–ª—ñ)
creds_dict = json.loads(os.environ["CREDS_JSON"])

# –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ Google Sheets API
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

# ‚ö†Ô∏è –ó–∞–º—ñ–Ω–∏ –Ω–∞–∑–≤—É —Ç–∞–±–ª–∏—Ü—ñ –Ω–∞ —Å–≤–æ—é (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "Volleyball Scores")
sheet = client.open("Volleyball Scores").sheet1

# –§—É–Ω–∫—Ü—ñ—è /result –∫–æ–º–∞–Ω–¥–∞1 —Ä–∞—Ö—É–Ω–æ–∫1 –∫–æ–º–∞–Ω–¥–∞2 —Ä–∞—Ö—É–Ω–æ–∫2
def result(update, context):
    try:
        args = context.args
        if len(args) != 4:
            raise ValueError("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤")

        team1 = args[0]
        score1 = int(args[1])
        team2 = args[2]
        score2 = int(args[3])

        # –ó–∞–ø–∏—Å —É —Ç–∞–±–ª–∏—Ü—é
        sheet.append_row([team1, score1, team2, score2])
        update.message.reply_text(f"‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {team1} {score1} ‚Äî {team2} {score2}")

    except Exception as e:
        logging.error(e)
        update.message.reply_text("‚ùå –§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥–∏: /result –∫–æ–º–∞–Ω–¥–∞1 —Ä–∞—Ö—É–Ω–æ–∫1 –∫–æ–º–∞–Ω–¥–∞2 —Ä–∞—Ö—É–Ω–æ–∫2")

def main():
    # ‚ö†Ô∏è –£ Render –¥–æ–¥–∞–π –∑–º—ñ–Ω–Ω—É BOT_TOKEN (–∑ BotFather)
    bot_token = os.environ["BOT_TOKEN"]

    updater = Updater(bot_token, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("result", result))

    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —ñ —Å–ª—É—Ö–∞—î –∫–æ–º–∞–Ω–¥–∏.")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
